{"ast":null,"code":"import _slicedToArray from \"/home/skyparci/work/my-boilerplate/packages/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/skyparci/work/my-boilerplate/packages/client/src/components/Modal/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types'; // components\n\nimport Button from 'components/Button'; // styles\n\nimport { ModalWrap, Modal, ModalContainer, ModalContent } from './styles';\n\nconst ModalComponent = ({\n  isVisible,\n  children,\n  buttonText\n}) => {\n  const _useState = useState(isVisible),\n        _useState2 = _slicedToArray(_useState, 2),\n        isModalVisible = _useState2[0],\n        setIsVisible = _useState2[1];\n\n  const handleClick = () => {\n    setIsVisible(false);\n  };\n\n  return isModalVisible ? ReactDOM.createPortal(React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ModalWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ModalContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ModalContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children), React.createElement(\"div\", {\n    className: \"modal-btn-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: buttonText ? buttonText : '확인',\n    primary: true,\n    block: true,\n    small: true,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })))))), document.body) : null;\n};\n\nModalComponent.propTypes = {\n  isVisible: PropTypes.bool,\n  close: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  buttonText: PropTypes.string\n};\nModalComponent.defaultProps = {\n  isVisible: false,\n  close: () => {},\n  children: React.createElement('div'),\n  buttonText: ''\n};\nexport default ModalComponent;","map":{"version":3,"sources":["/home/skyparci/work/my-boilerplate/packages/client/src/components/Modal/index.js"],"names":["React","useState","ReactDOM","PropTypes","Button","ModalWrap","Modal","ModalContainer","ModalContent","ModalComponent","isVisible","children","buttonText","isModalVisible","setIsVisible","handleClick","createPortal","document","body","propTypes","bool","close","func","oneOfType","arrayOf","node","isRequired","string","defaultProps","createElement"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,cAA3B,EAA2CC,YAA3C,QAA+D,UAA/D;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAAA,oBACrBX,QAAQ,CAACS,SAAD,CADa;AAAA;AAAA,QACrDG,cADqD;AAAA,QACrCC,YADqC;;AAG5D,QAAMC,WAAW,GAAG,MAAM;AACtBD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,SAAOD,cAAc,GACfX,QAAQ,CAACc,YAAT,CACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeL,QAAf,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEC,UAAU,GAAGA,UAAH,GAAgB,IADvC;AAEI,IAAA,OAAO,MAFX;AAGI,IAAA,KAAK,MAHT;AAII,IAAA,KAAK,MAJT;AAKI,IAAA,OAAO,EAAEG,WALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,CADJ,CADJ,CADJ,EAmBIE,QAAQ,CAACC,IAnBb,CADe,GAsBf,IAtBN;AAuBH,CA9BD;;AAgCAT,cAAc,CAACU,SAAf,GAA2B;AACvBT,EAAAA,SAAS,EAAEP,SAAS,CAACiB,IADE;AAEvBC,EAAAA,KAAK,EAAElB,SAAS,CAACmB,IAFM;AAGvBX,EAAAA,QAAQ,EAAER,SAAS,CAACoB,SAAV,CAAoB,CAC1BpB,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,IAA5B,CAD0B,EAE1BtB,SAAS,CAACsB,IAFgB,CAApB,EAGPC,UANoB;AAOvBd,EAAAA,UAAU,EAAET,SAAS,CAACwB;AAPC,CAA3B;AAUAlB,cAAc,CAACmB,YAAf,GAA8B;AAC1BlB,EAAAA,SAAS,EAAE,KADe;AAE1BW,EAAAA,KAAK,EAAE,MAAM,CAAE,CAFW;AAG1BV,EAAAA,QAAQ,EAAEX,KAAK,CAAC6B,aAAN,CAAoB,KAApB,CAHgB;AAI1BjB,EAAAA,UAAU,EAAE;AAJc,CAA9B;AAOA,eAAeH,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n// components\nimport Button from 'components/Button';\n// styles\nimport { ModalWrap, Modal, ModalContainer, ModalContent } from './styles';\n\nconst ModalComponent = ({ isVisible, children, buttonText }) => {\n    const [isModalVisible, setIsVisible] = useState(isVisible);\n\n    const handleClick = () => {\n        setIsVisible(false);\n    };\n\n    return isModalVisible\n        ? ReactDOM.createPortal(\n              <React.Fragment>\n                  <ModalWrap>\n                      <Modal>\n                          <ModalContainer>\n                              <ModalContent>{children}</ModalContent>\n                              <div className=\"modal-btn-area\">\n                                  <Button\n                                      content={buttonText ? buttonText : '확인'}\n                                      primary\n                                      block\n                                      small\n                                      onClick={handleClick}\n                                  />\n                              </div>\n                          </ModalContainer>\n                      </Modal>\n                  </ModalWrap>\n              </React.Fragment>,\n              document.body,\n          )\n        : null;\n};\n\nModalComponent.propTypes = {\n    isVisible: PropTypes.bool,\n    close: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]).isRequired,\n    buttonText: PropTypes.string,\n};\n\nModalComponent.defaultProps = {\n    isVisible: false,\n    close: () => {},\n    children: React.createElement('div'),\n    buttonText: '',\n};\n\nexport default ModalComponent;\n"]},"metadata":{},"sourceType":"module"}