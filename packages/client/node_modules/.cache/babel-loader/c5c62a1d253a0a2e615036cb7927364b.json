{"ast":null,"code":"import _slicedToArray from \"/home/skyparci/work/my-boilerplate/packages/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/skyparci/work/my-boilerplate/packages/client/src/scenes/NewContract/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // apollo\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { GET_CONTRACTS_QUERY, CREATE_CONTRACT } from 'queries'; // components\n\nimport TextField from 'components/TextField';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport { Plus } from 'styled-icons/fa-solid'; // hooks\n\nimport useValidation, { isRequired, lengthBetween } from 'hooks/useValidation'; // styles\n\nimport { Header, Title, ButtonWrap } from './styles'; // global\n\nimport { useGlobalStateContext } from 'global';\nconst configs = {\n  title: {\n    rules: [[isRequired, '제목을 입력하세요.'], [lengthBetween(1, 35), '1-35 자를 입력하세요.']]\n  },\n  description: {\n    rules: [[isRequired, '내용을 입력하세요.']]\n  }\n};\n\nconst NewContract = props => {\n  const _useMutation = useMutation(CREATE_CONTRACT, {\n    update: (cache, {\n      data: {\n        createContract\n      }\n    }) => {\n      try {\n        const _cache$readQuery = cache.readQuery({\n          query: GET_CONTRACTS_QUERY\n        }),\n              contracts = _cache$readQuery.contracts;\n\n        cache.writeQuery({\n          query: GET_CONTRACTS_QUERY,\n          data: {\n            contracts: contracts.concat([createContract])\n          }\n        });\n      } catch (err) {\n        LOG('cache error: ', err);\n      }\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        createContract = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error;\n\n  const submitForm = () => {\n    createContract({\n      variables: {\n        title: formState['title'].value,\n        description: formState['description'].value\n      }\n    }).then(() => {\n      props.history.push('/contracts');\n    }).catch(error => {\n      LOG('Error: ', error.message);\n    });\n  };\n\n  const _useValidation = useValidation(configs, submitForm),\n        formState = _useValidation.formState,\n        isSubmitting = _useValidation.isSubmitting,\n        handleChange = _useValidation.handleChange,\n        handleSubmit = _useValidation.handleSubmit;\n\n  LOG('NewContract formState', error, formState);\n  return React.createElement(\"div\", {\n    className: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"CREATE NEW CONTRACT\"), React.createElement(ButtonWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: React.createElement(Plus, {\n      size: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }),\n    primary: true,\n    small: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    placeholder: \"Contract Title\",\n    title: \"Contract Title\",\n    onChange: handleChange\n  }, formState['title'], {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(TextField, Object.assign({\n    placeholder: \"Description\",\n    title: \"description\",\n    onChange: handleChange\n  }, formState['description'], {\n    multiLine: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    content: \"Create Contract\",\n    primary: true,\n    block: true,\n    loading: loading,\n    disabled: isSubmitting && !error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), error && React.createElement(Modal, {\n    isVisible: !!error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, error && error.message)));\n};\n\nexport default NewContract;","map":{"version":3,"sources":["/home/skyparci/work/my-boilerplate/packages/client/src/scenes/NewContract/index.js"],"names":["React","Link","useMutation","GET_CONTRACTS_QUERY","CREATE_CONTRACT","TextField","Button","Modal","Plus","useValidation","isRequired","lengthBetween","Header","Title","ButtonWrap","useGlobalStateContext","configs","title","rules","description","NewContract","props","update","cache","data","createContract","readQuery","query","contracts","writeQuery","concat","err","LOG","loading","error","submitForm","variables","formState","value","then","history","push","catch","message","isSubmitting","handleChange","handleSubmit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,SAArD,C,CACA;;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,IAAT,QAAqB,uBAArB,C,CACA;;AACA,OAAOC,aAAP,IAAwBC,UAAxB,EAAoCC,aAApC,QAAyD,qBAAzD,C,CACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,UAA1C,C,CACA;;AACA,SAASC,qBAAT,QAAsC,QAAtC;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,CACH,CAACR,UAAD,EAAa,YAAb,CADG,EAEH,CAACC,aAAa,CAAC,CAAD,EAAI,EAAJ,CAAd,EAAuB,gBAAvB,CAFG;AADJ,GADK;AAOZQ,EAAAA,WAAW,EAAE;AACTD,IAAAA,KAAK,EAAE,CAAC,CAACR,UAAD,EAAa,YAAb,CAAD;AADE;AAPD,CAAhB;;AAYA,MAAMU,WAAW,GAAGC,KAAK,IAAI;AAAA,uBACoBnB,WAAW,CAACE,eAAD,EAAkB;AACtEkB,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAR,KAAyC;AAC7C,UAAI;AAAA,iCACsBF,KAAK,CAACG,SAAN,CAAgB;AAClCC,UAAAA,KAAK,EAAExB;AAD2B,SAAhB,CADtB;AAAA,cACQyB,SADR,oBACQA,SADR;;AAKAL,QAAAA,KAAK,CAACM,UAAN,CAAiB;AACbF,UAAAA,KAAK,EAAExB,mBADM;AAEbqB,UAAAA,IAAI,EAAE;AAAEI,YAAAA,SAAS,EAAEA,SAAS,CAACE,MAAV,CAAiB,CAACL,cAAD,CAAjB;AAAb;AAFO,SAAjB;AAIH,OATD,CASE,OAAOM,GAAP,EAAY;AACVC,QAAAA,GAAG,CAAC,eAAD,EAAkBD,GAAlB,CAAH;AACH;AACJ;AAdqE,GAAlB,CAD/B;AAAA;AAAA,QAClBN,cADkB;AAAA;AAAA,QACAQ,OADA,kBACAA,OADA;AAAA,QACSC,KADT,kBACSA,KADT;;AAkBzB,QAAMC,UAAU,GAAG,MAAM;AACrBV,IAAAA,cAAc,CAAC;AACXW,MAAAA,SAAS,EAAE;AACPnB,QAAAA,KAAK,EAAEoB,SAAS,CAAC,OAAD,CAAT,CAAmBC,KADnB;AAEPnB,QAAAA,WAAW,EAAEkB,SAAS,CAAC,aAAD,CAAT,CAAyBC;AAF/B;AADA,KAAD,CAAd,CAMKC,IANL,CAMU,MAAM;AACRlB,MAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACH,KARL,EASKC,KATL,CASWR,KAAK,IAAI;AACZF,MAAAA,GAAG,CAAC,SAAD,EAAYE,KAAK,CAACS,OAAlB,CAAH;AACH,KAXL;AAYH,GAbD;;AAlByB,yBAsCrBlC,aAAa,CAACO,OAAD,EAAUmB,UAAV,CAtCQ;AAAA,QAkCrBE,SAlCqB,kBAkCrBA,SAlCqB;AAAA,QAmCrBO,YAnCqB,kBAmCrBA,YAnCqB;AAAA,QAoCrBC,YApCqB,kBAoCrBA,YApCqB;AAAA,QAqCrBC,YArCqB,kBAqCrBA,YArCqB;;AAuCzBd,EAAAA,GAAG,CAAC,uBAAD,EAA0BE,KAA1B,EAAiCG,SAAjC,CAAH;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAqC,IAAA,OAAO,MAA5C;AAA6C,IAAA,KAAK,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,CADJ,EAUI;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,gBADhB;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,QAAQ,EAAED;AAHd,KAIQR,SAAS,CAAC,OAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,aADhB;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,QAAQ,EAAEQ;AAHd,KAIQR,SAAS,CAAC,aAAD,CAJjB;AAKI,IAAA,SAAS,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAC,iBAFZ;AAGI,IAAA,OAAO,MAHX;AAII,IAAA,KAAK,MAJT;AAKI,IAAA,OAAO,EAAEJ,OALb;AAMI,IAAA,QAAQ,EAAEW,YAAY,IAAI,CAACV,KAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAVJ,EAmCKA,KAAK,IACF,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAC,CAACA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAAK,IAAIA,KAAK,CAACS,OAA7C,CADJ,CApCR,CADJ;AA2CH,CApFD;;AAsFA,eAAevB,WAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n// apollo\nimport { useMutation } from '@apollo/react-hooks';\nimport { GET_CONTRACTS_QUERY, CREATE_CONTRACT } from 'queries';\n// components\nimport TextField from 'components/TextField';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport { Plus } from 'styled-icons/fa-solid';\n// hooks\nimport useValidation, { isRequired, lengthBetween } from 'hooks/useValidation';\n// styles\nimport { Header, Title, ButtonWrap } from './styles';\n// global\nimport { useGlobalStateContext } from 'global';\n\nconst configs = {\n    title: {\n        rules: [\n            [isRequired, '제목을 입력하세요.'],\n            [lengthBetween(1, 35), '1-35 자를 입력하세요.'],\n        ],\n    },\n    description: {\n        rules: [[isRequired, '내용을 입력하세요.']],\n    },\n};\n\nconst NewContract = props => {\n    const [createContract, { loading, error }] = useMutation(CREATE_CONTRACT, {\n        update: (cache, { data: { createContract } }) => {\n            try {\n                const { contracts } = cache.readQuery({\n                    query: GET_CONTRACTS_QUERY,\n                });\n\n                cache.writeQuery({\n                    query: GET_CONTRACTS_QUERY,\n                    data: { contracts: contracts.concat([createContract]) },\n                });\n            } catch (err) {\n                LOG('cache error: ', err);\n            }\n        },\n    });\n\n    const submitForm = () => {\n        createContract({\n            variables: {\n                title: formState['title'].value,\n                description: formState['description'].value,\n            },\n        })\n            .then(() => {\n                props.history.push('/contracts');\n            })\n            .catch(error => {\n                LOG('Error: ', error.message);\n            });\n    };\n\n    const {\n        formState,\n        isSubmitting,\n        handleChange,\n        handleSubmit,\n    } = useValidation(configs, submitForm);\n    LOG('NewContract formState', error, formState);\n\n    return (\n        <div className=\"wrap\">\n            <Header>\n                <Title>CREATE NEW CONTRACT</Title>\n                <ButtonWrap>\n                    <Link to=\"/new\">\n                        <Button content={<Plus size=\"12\" />} primary small />\n                    </Link>\n                </ButtonWrap>\n            </Header>\n\n            <form onSubmit={handleSubmit} noValidate>\n                <TextField\n                    placeholder=\"Contract Title\"\n                    title=\"Contract Title\"\n                    onChange={handleChange}\n                    {...formState['title']}\n                />\n                <br />\n                <TextField\n                    placeholder=\"Description\"\n                    title=\"description\"\n                    onChange={handleChange}\n                    {...formState['description']}\n                    multiLine\n                />\n                <br />\n                <Button\n                    type=\"submit\"\n                    content=\"Create Contract\"\n                    primary\n                    block\n                    loading={loading}\n                    disabled={isSubmitting && !error}\n                />\n            </form>\n            {error && (\n                <Modal isVisible={!!error}>\n                    <div className=\"text-center\">{error && error.message}</div>\n                </Modal>\n            )}\n        </div>\n    );\n};\n\nexport default NewContract;\n"]},"metadata":{},"sourceType":"module"}