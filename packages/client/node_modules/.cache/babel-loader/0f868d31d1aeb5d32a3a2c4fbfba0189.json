{"ast":null,"code":"var _jsxFileName = \"/home/skyparci/work/my-boilerplate/packages/client/src/scenes/Contracts/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Plus } from 'styled-icons/fa-solid'; // apollo\n\nimport { useQuery } from '@apollo/react-hooks'; // components\n\nimport Button from 'components/Button';\nimport { PageSpinner } from 'components/Spinner'; // utils\n\nimport { isLoggedIn } from 'utils';\nimport { GET_CONTRACTS_QUERY } from 'queries'; // global\n\nimport { useGlobalStateContext } from 'global'; // styles\n\nimport { Header, Title, ButtonWrap, List, ListItem, ItemWrap, Item, SpinnerWrap } from './styles';\n\nconst Contracts = props => {\n  const _useQuery = useQuery(GET_CONTRACTS_QUERY),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useGlobalStateContex = useGlobalStateContext(),\n        LOG = _useGlobalStateContex.LOG;\n\n  if (loading) return React.createElement(SpinnerWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(PageSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Error\");\n  return React.createElement(\"div\", {\n    className: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Contract List\"), isLoggedIn() ? React.createElement(ButtonWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button, {\n    content: React.createElement(Plus, {\n      size: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    primary: true,\n    small: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))) : null), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, data.contracts.map(({\n    id,\n    title,\n    description\n  }) => {\n    return React.createElement(ListItem, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ItemWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, title), React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, description)));\n  })));\n};\n\nexport default Contracts;","map":{"version":3,"sources":["/home/skyparci/work/my-boilerplate/packages/client/src/scenes/Contracts/index.js"],"names":["React","Link","Plus","useQuery","Button","PageSpinner","isLoggedIn","GET_CONTRACTS_QUERY","useGlobalStateContext","Header","Title","ButtonWrap","List","ListItem","ItemWrap","Item","SpinnerWrap","Contracts","props","loading","error","data","LOG","contracts","map","id","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CACA;;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,mBAAT,QAAoC,SAApC,C,CACA;;AACA,SAASC,qBAAT,QAAsC,QAAtC,C,CACA;;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,UAHJ,EAIIC,IAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,IAPJ,EAQIC,WARJ,QASO,UATP;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,oBACUf,QAAQ,CAACI,mBAAD,CADlB;AAAA,QACfY,OADe,aACfA,OADe;AAAA,QACNC,KADM,aACNA,KADM;AAAA,QACCC,IADD,aACCA,IADD;;AAAA,gCAEPb,qBAAqB,EAFd;AAAA,QAEfc,GAFe,yBAEfA,GAFe;;AAIvB,MAAIH,OAAJ,EACI,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKJ,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAEX,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEKd,UAAU,KACP,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEI,IAAA,OAAO,MAFX;AAGI,IAAA,KAAK,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADO,GAUP,IAZR,CADJ,EAgBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKe,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAD,KAAgC;AAChD,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEF,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,KAAP,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,WAAP,CAFJ,CADJ,CADJ;AAQH,GATA,CADL,CAhBJ,CADJ;AA+BH,CA3CD;;AA6CA,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Plus } from 'styled-icons/fa-solid';\n// apollo\nimport { useQuery } from '@apollo/react-hooks';\n// components\nimport Button from 'components/Button';\nimport { PageSpinner } from 'components/Spinner';\n// utils\nimport { isLoggedIn } from 'utils';\nimport { GET_CONTRACTS_QUERY } from 'queries';\n// global\nimport { useGlobalStateContext } from 'global';\n// styles\nimport {\n    Header,\n    Title,\n    ButtonWrap,\n    List,\n    ListItem,\n    ItemWrap,\n    Item,\n    SpinnerWrap,\n} from './styles';\n\nconst Contracts = props => {\n    const { loading, error, data } = useQuery(GET_CONTRACTS_QUERY);\n    const { LOG } = useGlobalStateContext();\n\n    if (loading)\n        return (\n            <SpinnerWrap>\n                <PageSpinner />\n            </SpinnerWrap>\n        );\n    if (error) return <p>Error</p>;\n\n    return (\n        <div className=\"wrap\">\n            <Header>\n                <Title>Contract List</Title>\n                {isLoggedIn() ? (\n                    <ButtonWrap>\n                        <Link to=\"/new\">\n                            <Button\n                                content={<Plus size=\"12\" />}\n                                primary\n                                small\n                            />\n                        </Link>\n                    </ButtonWrap>\n                ) : null}\n            </Header>\n\n            <List>\n                {data.contracts.map(({ id, title, description }) => {\n                    return (\n                        <ListItem key={id}>\n                            <ItemWrap>\n                                <Item>{title}</Item>\n                                <Item>{description}</Item>\n                            </ItemWrap>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </div>\n    );\n};\n\nexport default Contracts;\n"]},"metadata":{},"sourceType":"module"}