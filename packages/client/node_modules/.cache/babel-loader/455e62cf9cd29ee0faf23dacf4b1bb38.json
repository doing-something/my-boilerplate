{"ast":null,"code":"import { trimValue } from './utils';\n\nconst runValidate = (rules, value) => rules.reduce(([isSuccess, message], [isValid, errorMessage]) => {\n  if (!isSuccess) return [false, message];\n  if (Object.is(value, undefined) || !isValid(trimValue(value))) return [false, errorMessage];\n  return [true, ''];\n}, [true, '']);\n\nfunction validateField(fieldValue = '', rules = []) {\n  const errors = runValidate(rules, fieldValue);\n  if (!errors[0]) return errors[1];\n  return null;\n}\n\nexport default function validate(fieldValues, fieldConfigs) {\n  return Object.keys(fieldConfigs).reduce((errors, fieldName) => {\n    const fieldConfig = fieldConfigs[fieldName];\n    const fieldValue = fieldValues[fieldName];\n    errors[fieldName] = validateField(fieldValue, fieldConfig.rules);\n    return errors;\n  }, {});\n}","map":{"version":3,"sources":["/home/skyparci/work/my-boilerplate/packages/client/src/hooks/useValidation/validate.js"],"names":["trimValue","runValidate","rules","value","reduce","isSuccess","message","isValid","errorMessage","Object","is","undefined","validateField","fieldValue","errors","validate","fieldValues","fieldConfigs","keys","fieldName","fieldConfig"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,KAChBD,KAAK,CAACE,MAAN,CACI,CAAC,CAACC,SAAD,EAAYC,OAAZ,CAAD,EAAuB,CAACC,OAAD,EAAUC,YAAV,CAAvB,KAAmD;AAC/C,MAAI,CAACH,SAAL,EAAgB,OAAO,CAAC,KAAD,EAAQC,OAAR,CAAP;AAEhB,MAAIG,MAAM,CAACC,EAAP,CAAUP,KAAV,EAAiBQ,SAAjB,KAA+B,CAACJ,OAAO,CAACP,SAAS,CAACG,KAAD,CAAV,CAA3C,EACI,OAAO,CAAC,KAAD,EAAQK,YAAR,CAAP;AACJ,SAAO,CAAC,IAAD,EAAO,EAAP,CAAP;AACH,CAPL,EAQI,CAAC,IAAD,EAAO,EAAP,CARJ,CADJ;;AAYA,SAASI,aAAT,CAAuBC,UAAU,GAAG,EAApC,EAAwCX,KAAK,GAAG,EAAhD,EAAoD;AAChD,QAAMY,MAAM,GAAGb,WAAW,CAACC,KAAD,EAAQW,UAAR,CAA1B;AAEA,MAAI,CAACC,MAAM,CAAC,CAAD,CAAX,EAAgB,OAAOA,MAAM,CAAC,CAAD,CAAb;AAChB,SAAO,IAAP;AACH;;AAED,eAAe,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,YAA/B,EAA6C;AACxD,SAAOR,MAAM,CAACS,IAAP,CAAYD,YAAZ,EAA0Bb,MAA1B,CAAiC,CAACU,MAAD,EAASK,SAAT,KAAuB;AAC3D,UAAMC,WAAW,GAAGH,YAAY,CAACE,SAAD,CAAhC;AACA,UAAMN,UAAU,GAAGG,WAAW,CAACG,SAAD,CAA9B;AACAL,IAAAA,MAAM,CAACK,SAAD,CAAN,GAAoBP,aAAa,CAACC,UAAD,EAAaO,WAAW,CAAClB,KAAzB,CAAjC;AACA,WAAOY,MAAP;AACH,GALM,EAKJ,EALI,CAAP;AAMH","sourcesContent":["import { trimValue } from './utils';\n\nconst runValidate = (rules, value) =>\n    rules.reduce(\n        ([isSuccess, message], [isValid, errorMessage]) => {\n            if (!isSuccess) return [false, message];\n\n            if (Object.is(value, undefined) || !isValid(trimValue(value)))\n                return [false, errorMessage];\n            return [true, ''];\n        },\n        [true, ''],\n    );\n\nfunction validateField(fieldValue = '', rules = []) {\n    const errors = runValidate(rules, fieldValue);\n\n    if (!errors[0]) return errors[1];\n    return null;\n}\n\nexport default function validate(fieldValues, fieldConfigs) {\n    return Object.keys(fieldConfigs).reduce((errors, fieldName) => {\n        const fieldConfig = fieldConfigs[fieldName];\n        const fieldValue = fieldValues[fieldName];\n        errors[fieldName] = validateField(fieldValue, fieldConfig.rules);\n        return errors;\n    }, {});\n}\n"]},"metadata":{},"sourceType":"module"}