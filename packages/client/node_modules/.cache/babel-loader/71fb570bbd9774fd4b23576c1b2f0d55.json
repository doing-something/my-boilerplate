{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/skyparci/work/my-boilerplate/packages/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation createContract($title: String!, $description: String!) {\\n        createContract(title: $title, description: $description) {\\n            id\\n            title\\n            description\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    query getAllContracts {\\n        contracts: fetchAllContracts {\\n            id\\n            title\\n            description\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation signUpUser($name: String!, $email: String!, $password: String!) {\\n        user: signupUser(name: $name, email: $email, password: $password) {\\n            id\\n            email\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    query {\\n        fetchUser {\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation login($email: String!, $password: String!) {\\n        user: loginUser(email: $email, password: $password) {\\n            token\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport const LOGIN_USER = gql(_templateObject());\nexport const GET_USER = gql(_templateObject2());\nexport const REGISTER_USER = gql(_templateObject3());\nexport const GET_CONTRACTS_QUERY = gql(_templateObject4());\nexport const CREATE_CONTRACT = gql(_templateObject5());","map":{"version":3,"sources":["/home/skyparci/work/my-boilerplate/packages/client/src/queries/index.js"],"names":["gql","LOGIN_USER","GET_USER","REGISTER_USER","GET_CONTRACTS_QUERY","CREATE_CONTRACT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,UAAU,GAAGD,GAAH,mBAAhB;AAQP,OAAO,MAAME,QAAQ,GAAGF,GAAH,oBAAd;AAQP,OAAO,MAAMG,aAAa,GAAGH,GAAH,oBAAnB;AAUP,OAAO,MAAMI,mBAAmB,GAAGJ,GAAH,oBAAzB;AAUP,OAAO,MAAMK,eAAe,GAAGL,GAAH,oBAArB","sourcesContent":["import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password: String!) {\n        user: loginUser(email: $email, password: $password) {\n            token\n        }\n    }\n`;\n\nexport const GET_USER = gql`\n    query {\n        fetchUser {\n            email\n        }\n    }\n`;\n\nexport const REGISTER_USER = gql`\n    mutation signUpUser($name: String!, $email: String!, $password: String!) {\n        user: signupUser(name: $name, email: $email, password: $password) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nexport const GET_CONTRACTS_QUERY = gql`\n    query getAllContracts {\n        contracts: fetchAllContracts {\n            id\n            title\n            description\n        }\n    }\n`;\n\nexport const CREATE_CONTRACT = gql`\n    mutation createContract($title: String!, $description: String!) {\n        createContract(title: $title, description: $description) {\n            id\n            title\n            description\n        }\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}