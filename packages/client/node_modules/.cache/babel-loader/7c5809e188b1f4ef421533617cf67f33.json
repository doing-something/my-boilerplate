{"ast":null,"code":"import _slicedToArray from \"/home/skyparci/work/my-boilerplate/packages/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/skyparci/work/my-boilerplate/packages/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/skyparci/work/my-boilerplate/packages/client/src/components/TextField/index.js\";\nimport React, { memo, useReducer } from 'react';\nimport PropTypes from 'prop-types'; // styles\n\nimport { TextFieldWrap, TextFieldLabel, TextFieldInput, TextFieldFloating, TextFieldError } from './styles'; // constants\n\nconst ACTIVATE_FIELD = 'ACTIVATE_FIELD';\nconst DISABLE_FOCUS = 'DISABLE_FOCUS';\nconst UPDATE_INPUT_VALUE = 'UPDATE_INPUT_VALUE';\n\nfunction reducer(state, {\n  type,\n  value\n}) {\n  switch (type) {\n    case ACTIVATE_FIELD:\n      return _objectSpread({}, state, {\n        isLabelActive: true\n      });\n\n    case DISABLE_FOCUS:\n      return _objectSpread({}, state, {\n        isLabelActive: false\n      });\n\n    case UPDATE_INPUT_VALUE:\n      return _objectSpread({}, state, {\n        inputValue: value,\n        isLabelActive: true\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst TextField = memo(({\n  title,\n  name,\n  type,\n  placeholder,\n  disabled,\n  autoComplete,\n  onChange,\n  onBlur,\n  required,\n  error\n}) => {\n  const _useReducer = useReducer(reducer, {\n    inputValue: '',\n    isLabelActive: false\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const activateField = () => {\n    dispatch({\n      type: ACTIVATE_FIELD\n    });\n  };\n\n  const disableField = e => {\n    if (e.target.value === '') {\n      dispatch({\n        type: DISABLE_FOCUS\n      });\n    }\n  };\n\n  const handleChange = e => {\n    e.persist();\n    const value = e.target.value;\n    dispatch({\n      type: UPDATE_INPUT_VALUE,\n      value\n    });\n    e.preventDefault();\n    onChange(e);\n  };\n\n  const handleBlur = e => {};\n\n  return React.createElement(TextFieldWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TextFieldLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextFieldFloating, {\n    isActive: !!state.inputValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, title || name), React.createElement(TextFieldInput, {\n    id: name,\n    name: name,\n    type: type,\n    placeholder: placeholder,\n    disabled: disabled,\n    required: required,\n    autoComplete: autoComplete,\n    value: state.inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: activateField,\n    onBlur: disableField,\n    isLabelActive: !!state.inputValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), error && React.createElement(TextFieldError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, error));\n});\nexport default TextField;\nTextField.prototype = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  autoComplete: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func\n};\nTextField.defaultProps = {\n  title: '',\n  error: '',\n  type: 'text',\n  placeholder: '',\n  disabled: false,\n  required: false,\n  autoComplete: 'on',\n  value: '',\n  onChange: () => {},\n  onBlur: () => {}\n};","map":{"version":3,"sources":["/home/skyparci/work/my-boilerplate/packages/client/src/components/TextField/index.js"],"names":["React","memo","useReducer","PropTypes","TextFieldWrap","TextFieldLabel","TextFieldInput","TextFieldFloating","TextFieldError","ACTIVATE_FIELD","DISABLE_FOCUS","UPDATE_INPUT_VALUE","reducer","state","type","value","isLabelActive","inputValue","TextField","title","name","placeholder","disabled","autoComplete","onChange","onBlur","required","error","dispatch","activateField","disableField","e","target","handleChange","persist","preventDefault","handleBlur","prototype","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { memo, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n// styles\nimport {\n    TextFieldWrap,\n    TextFieldLabel,\n    TextFieldInput,\n    TextFieldFloating,\n    TextFieldError,\n} from './styles';\n// constants\nconst ACTIVATE_FIELD = 'ACTIVATE_FIELD';\nconst DISABLE_FOCUS = 'DISABLE_FOCUS';\nconst UPDATE_INPUT_VALUE = 'UPDATE_INPUT_VALUE';\n\nfunction reducer(state, { type, value }) {\n    switch (type) {\n        case ACTIVATE_FIELD:\n            return { ...state, isLabelActive: true };\n        case DISABLE_FOCUS:\n            return { ...state, isLabelActive: false };\n        case UPDATE_INPUT_VALUE:\n            return { ...state, inputValue: value, isLabelActive: true };\n        default:\n            return state;\n    }\n}\n\nconst TextField = memo(\n    ({\n        title,\n        name,\n        type,\n        placeholder,\n        disabled,\n        autoComplete,\n        onChange,\n        onBlur,\n        required,\n        error,\n    }) => {\n        const [state, dispatch] = useReducer(reducer, {\n            inputValue: '',\n            isLabelActive: false,\n        });\n\n        const activateField = () => {\n            dispatch({ type: ACTIVATE_FIELD });\n        };\n\n        const disableField = e => {\n            if (e.target.value === '') {\n                dispatch({ type: DISABLE_FOCUS });\n            }\n        };\n\n        const handleChange = e => {\n            e.persist();\n            const { value } = e.target;\n            dispatch({ type: UPDATE_INPUT_VALUE, value });\n            e.preventDefault();\n            onChange(e);\n        };\n\n        const handleBlur = e => {\n            \n        }\n\n        return (\n            <TextFieldWrap>\n                <TextFieldLabel>\n                    <TextFieldFloating isActive={!!state.inputValue}>\n                        {title || name}\n                    </TextFieldFloating>\n                    <TextFieldInput\n                        id={name}\n                        name={name}\n                        type={type}\n                        placeholder={placeholder}\n                        disabled={disabled}\n                        required={required}\n                        autoComplete={autoComplete}\n                        value={state.inputValue}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        onFocus={activateField}\n                        onBlur={disableField}\n                        isLabelActive={!!state.inputValue}\n                    />\n                </TextFieldLabel>\n                {error && <TextFieldError>{error}</TextFieldError>}\n            </TextFieldWrap>\n        );\n    },\n);\n\nexport default TextField;\n\nTextField.prototype = {\n    name: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    error: PropTypes.string,\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    required: PropTypes.bool,\n    autoComplete: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n};\n\nTextField.defaultProps = {\n    title: '',\n    error: '',\n    type: 'text',\n    placeholder: '',\n    disabled: false,\n    required: false,\n    autoComplete: 'on',\n    value: '',\n    onChange: () => {},\n    onBlur: () => {},\n};\n"]},"metadata":{},"sourceType":"module"}